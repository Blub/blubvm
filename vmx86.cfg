// minimal basic x86-like instructions :D
// by Blub\0
// An AOP - "Alias"-Oriented Programming language

alias nop ""

alias on_z "on_${flag_z}"
alias on_g "on_${flag_g}"
alias on_l "on_${flag_l}"
alias on_tmp "on_${flag_tmp}"
alias on_0 ""
alias on_1 ""

alias son_1 "alias on_0 \"\"; alias on_1 $*"
alias son_0 "alias on_1 \"\"; alias on_0 $*"
alias nop_0 "alias on_0 \"\""
alias nop_1 "alias on_1 \"\""

alias clf "set flag_z 0; set flag_g 0; set flag_l 0; set flag_tmp 0"
alias clft "set flag_z 0; set flag_g 0; set flag_l 0"

clf

alias cmp "menu_cmd rpn /flag_z $1 $2 eq def /flag_l $1 $2 lt def /flag_g $1 $2 gt def"
alias test "menu_cmd rpn /flag_z $1 0 eq def"

alias jz  "son_1 \"$1\"; on_z"
alias jnz "son_0 \"$1\"; on_z"
alias jg  "son_1 \"$1\"; on_g"
alias jl  "son_1 \"$1\"; on_l"
alias jge "menu_cmd rpn /flag_tmp flag_z flag_g max 1 min def; son_1 \"$1\"; on_tmp"
alias jle "menu_cmd rpn /flag_tmp flag_z flag_l max 1 min def; son_1 \"$1\"; on_tmp"

alias setz  "set $1 $flag_z"
alias setnz "set $1 $flag_z; toggle $1"
alias setg  "set $1 $flag_g"
alias setl  "set $1 $flag_l"
alias setge "menu_cmd rpn /$1 flag_z flag_g max 1 min def;"
alias setle "menu_cmd rpn /$1 flag_z flag_l max 1 min def;"

alias cmovz  "son_1 \"mov $*\"; on_z"
alias cmovnz "son_0 \"mov $*\"; on_z"
alias cmovg  "son_1 \"mov $*\"; on_g"
alias cmovl  "son_1 \"mov $*\"; on_l"
alias cmovge "son_1 \"mov $*\"; menu_cmd rpn /flag_tmp flag_z flag_g max 1 min def; on_tmp"
alias cmovle "son_1 \"mov $*\"; menu_cmd rpn /flag_tmp flag_z flag_l max 1 min def; on_tmp"

alias inc "menu_cmd rpn /$1 $1 1 add def; test $1"
alias dec "menu_cmd rpn /$1 $1 1 sub def; test $1"
alias add "menu_cmd rpn /$1 $1 $2 add def; test $1"
alias sub "menu_cmd rpn /$1 $1 $2 sub def; test $1"
alias mul "menu_cmd rpn /$1 $1 $2 mul def; test $1"
alias div "menu_cmd rpn /$1 $1 $2 div def; test $1"

alias mov "set $1 \"$2\""

set eax 0
set ecx 0
set edx 0
set ebx 0

// now a helper variable, whatever was poped off last using popz
set stack ""

alias push "menu_cmd rpn /$1 dbpush"
alias popz "menu_cmd rpn /stack dbpop def"
alias pop "menu_cmd rpn /$1 dbpop def"

// instructions which need 2 "CPU cycles" minimum :P
alias _loop "_loop_do; dec ecx; cmp ecx 0; jg _loop"
alias loop "alias _loop_do $1; dec ecx; cmp ecx 0; jg _loop"

alias _loopnz_1 "test _loop_cond; jnz _loopnz"
alias _loopnz "_loop_do; setnz _loop_cond; dec ecx; jnz _loopnz_1"
alias loopnz "alias _loop_do $1; dec ecx; jnz _loopnz"

alias _loopz_1 "test _loop_cond; jnz _loopz"
alias _loopz "_loop_do; setz _loop_cond; dec ecx; jnz _loopz_1"
alias loopz "alias _loop_do $1; dec ecx; jnz _loopz"
